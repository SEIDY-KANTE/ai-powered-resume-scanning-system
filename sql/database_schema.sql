-- ========= JOBS TABLE =========
CREATE TABLE IF NOT EXISTS public.jobs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-incrementing primary key
    "Job Title" TEXT,
    "Company Name" TEXT,
    "Job Description" TEXT,
    "Location" TEXT,
    "Job Type" TEXT, -- e.g., Full-time, Part-time
    "Salary Range" TEXT, -- e.g., $70k - $100k
    "Experience Level" TEXT, -- e.g., Entry, Mid, Senior
    "Skills Required" TEXT, -- Comma-separated string of skills
    "Industry" TEXT,
    "Posted Date" DATE, -- Stores only the date, e.g., YYYY-MM-DD
    "Employment Mode" TEXT, -- e.g., Remote, On-site, Hybrid
    created_at TIMESTAMPTZ DEFAULT now() NOT NULL -- Timestamp of when the record was created
);

COMMENT ON TABLE public.jobs IS 'Stores job postings for the AI Resume Screening System.';
COMMENT ON COLUMN public.jobs.id IS 'Unique identifier for each job posting.';
COMMENT ON COLUMN public.jobs."Job Title" IS 'The title of the job position.';
COMMENT ON COLUMN public.jobs."Skills Required" IS 'Comma-separated list of skills required for the job.';
COMMENT ON COLUMN public.jobs."Posted Date" IS 'The date when the job was posted.';
COMMENT ON COLUMN public.jobs.created_at IS 'Timestamp of when the job record was created in the database.';


-- ========= PREDICTION HISTORY TABLE =========

CREATE TABLE IF NOT EXISTS public.prediction_history (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp TIMESTAMPTZ NOT NULL, -- Timestamp of when the prediction was made
    resume_name TEXT, -- Filename or identifier of the resume
    job_title TEXT, -- Title of the job against which the resume was matched
    model_used TEXT NOT NULL, -- Name of the AI model used for the prediction
    match_score INTEGER, -- Overall match score (0-100)
    skill_match_score INTEGER, -- Skill match component score (0-100)
    experience_match_score INTEGER, -- Experience match component score (0-100)
    missing_skills_count INTEGER,
    missing_skills_list TEXT, -- Comma-separated list of missing skills
    suggestions TEXT, -- Suggestions provided by the model (especially Gemini)
    created_at TIMESTAMPTZ DEFAULT now() NOT NULL -- Timestamp of when the record was created
);

COMMENT ON TABLE public.prediction_history IS 'Logs the results of resume-to-job matching predictions.';
COMMENT ON COLUMN public.prediction_history.model_used IS 'The AI model used for the analysis (e.g., Gemini Pro, LSTM, Transformer).';
COMMENT ON COLUMN public.prediction_history.match_score IS 'The overall calculated match score percentage.';
